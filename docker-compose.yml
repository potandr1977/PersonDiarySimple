version: '3.4'

services:
  redis:
     image: redis
     container_name: persondiaryredis
     ports:
       - '63799:6379'
     networks:
       - mynetwork

  rabbitmq:
     image: rabbitmq:3.8.3-management
     ports:
       - "5674:5672"
       - "15674:15672"
     container_name: personsimplerabbitmq
     environment:
       - RABBITMQ_DEFAULT_USER=admin
       - RABBITMQ_DEFAULT_PASS=admin
     networks:
       - mynetwork

  pgserver:
     image: postgres
     restart: always
     ports:
       - 5432:5432
     environment:
       - POSTGRES_USER=app
       - POSTGRES_PASSWORD=app
     volumes:
       - pgdata:/var/lib/postgresql/data
     networks:
       - mynetwork

  persondiary.person.webapi:
     image: ${DOCKER_REGISTRY-}persondiarypersonwebapi
     build:
       context: .
       dockerfile: PersonDiary.Person.WebApi/Dockerfile
     depends_on:
       - "rabbitmq"
       - "pgserver"
       - "persondiary.lifeevent.webapi"
     networks:
       - mynetwork

  persondiary.lifeevent.webapi:
     image: ${DOCKER_REGISTRY-}persondiarylifeeventwebapi
     build:
       context: .
       dockerfile: PersonDiary.LifeEvent.WebApi/Dockerfile
     depends_on:
       - "rabbitmq"
       - "pgserver"
       - "redis"
     networks:
       - mynetwork


volumes:
  pgdata:
 
networks:
  mynetwork:
     driver: bridge